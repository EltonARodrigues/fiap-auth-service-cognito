app: auth-service-cognito
service: auth-service-cognito
frameworkVersion: "3"
useDotenv: true

provider:
  httpApi:
    cors:
      allowedOrigins:
        - '*'
      allowedHeaders:
        - Content-Type
        - Access-Control-Allow-Origin
        - Access-Control-Allow-Headers
        - Access-Control-Allow-Methods
      allowedMethods:
        - GET
        - POST
        - PUT
  logs:
    httpApi: true

  name: aws
  runtime: nodejs18.x
  region: us-east-1
  stage: dev
  iamRoleStatements:
  - Effect: Allow
    Action:
      - cognito-idp:AdminInitiateAuth
      - cognito-idp:AdminCreateUser
      - cognito-idp:AdminSetUserPassword
      - cognito-idp:AdminGetUser
    Resource: '*'
 
  environment:
    CLIENTES_POOL_ID: ${self:custom.CLIENTES_POOL_ID}

resources:
  Resources:
    CognitoUserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: clientes-pool
        Schema:
          - Name: name
            Required: true
            Mutable: false
            AttributeDataType: String
        Policies:
          PasswordPolicy:
            MinimumLength: 6
        UsernameAttributes:
          - email
        AutoVerifiedAttributes:
          - email
    CognitoUserClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        ClientName: clientes-pool-client
        GenerateSecret: false
        UserPoolId:
          Ref: CognitoUserPool
        AccessTokenValidity: 5
        IdTokenValidity: 5
        ExplicitAuthFlows:
          - "ADMIN_NO_SRP_AUTH"

functions:
  signUpUser:
    handler: src/functions/signUp.signUpUser
    events:
      - httpApi:
          path: /api/signup
          method: post
  
  test:
    handler: src/functions/signUp.signUpUser
    events:
      - httpApi:
          path: /api/teste
          method: post

  # auth:
  #   handler: src/functions/auth.handler
    
  # signInUser:
  #   handler: src/functions/signIn.handler
  #   events:
  #     - httpApi:
  #         path: /api/signin
  #         method: post
  #         authorizer: auth

custom:
  serverless-offline:
    httpPort: 3001
  CLIENTES_POOL_ID: ${ssm:/pools/client}

plugins:
  - serverless-offline
  - serverless-plugin-typescript
